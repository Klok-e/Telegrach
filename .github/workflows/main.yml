name: CI

# https://github.community/t/how-to-trigger-an-action-on-push-or-pull-request-but-not-both/16662/2
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.102"

      - name: Setup protoc
        uses: arduino/setup-protoc@v1.1.0
        with:
          version: 3.x
          # to avoid rate limits
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile protobuffers
        run: bash ./protobuffers/compile.sh

      - name: Build the executable
        run: |
          cd DesktopFrontend
          dotnet build

  format-commit:
    runs-on: ubuntu-latest
    # Check if the PR is not raised by this workflow and is not from a fork
    steps:
      - name: Print debug event
        run: |
          echo "github.event_name == ${{ github.event_name }}"
          echo "github.event.action == ${{ github.event.action }}"

      - if: github.event_name == 'pull_request'
        name: Checkout
        uses: actions/checkout@v2
        # Checkout pull request HEAD commit instead of merge commit
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - if: github.event_name == 'push'
        name: Checkout
        uses: actions/checkout@v2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.102"

      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: "3.8.x"

      - name: Restore local tools (dotnet format specifically)
        run: |
          cd DesktopFrontend/
          dotnet tool restore

      - name: Run dotnet format
        id: csharp
        run: |
          cd DesktopFrontend/
          CHANGED=0
          dotnet format --check || CHANGED=$?
          # 0 - not changed, anything else - changed
          echo "::set-output name=changed-files::$CHANGED"

      - name: Format python code
        id: autopep8
        run: |
          pip install autopep8
          # hack, remove when pycodestyle supports python3.8 in the stable version
          pip install --upgrade git+https://github.com/PyCQA/pycodestyle.git@master
          EXIT=0
          autopep8 --exit-code --recursive --in-place --aggressive --aggressive ./Server || EXIT=$?
          echo ::set-output name=exit-code::$EXIT

      - name: Print changed files debug
        run: |
          echo "python exit ${{ steps.autopep8.outputs.exit-code }}"
          echo "csharp changed-files ${{ steps.csharp.outputs.changed-files }}"

      - name: Find Current Pull Request
        uses: jwalton/gh-find-current-pr@v1.0.2
        id: findPR
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Print debug pull request
        run: |
          echo "steps.findPR.outputs.pr == ${{ steps.findPR.outputs.pr }}"

      # if this branch has a PR to master and code was changed by formatters
      - if:
          (steps.findPR.outputs.pr != '' || github.event_name == 'pull_request' && github.event.action == 'opened') &&
          (steps.autopep8.outputs.exit-code == 2 || steps.csharp.outputs.changed-files != 0)
        name: Create pull request with proper formatting
        uses: peter-evans/create-pull-request@v2
        id: pull_request
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: formatting fixes
          title: Fixes by Auto Formatting Bot
          body: This is an auto-generated PR with fixes by Auto Formatting Bot.
          branch: format-patches
          branch-suffix: timestamp

      # if this branch has a PR to master and code was changed by formatters
      # but is not a push to master
      - if:
          (steps.findPR.outputs.pr != '' || github.event_name == 'pull_request' && github.event.action == 'opened') &&
          github.event_name != 'push' &&
          (steps.autopep8.outputs.exit-code == 2 || steps.csharp.outputs.changed-files != 0)
        name: Comment on the PR with the formatting pull request number
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: "Formatting pull request created #${{ steps.pull_request.outputs.pr_number }}"

      # if code was changed by formatters
      - if: steps.autopep8.outputs.exit-code == 2 || steps.csharp.outputs.changed-files != 0
        name: Fail if there are changes so that a job fails
        run: exit 1
